{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _eye_open = _interopRequireDefault(require(\"../../assets/images/eye_open.svg\"));\n\nvar _eye_closed = _interopRequireDefault(require(\"../../assets/images/eye_closed.svg\"));\n\nvar _styles = _interopRequireDefault(require(\"./styles\"));\n\nvar _this = this,\n    _jsxFileName = \"/Volumes/Wand/Workspace/ICods/ICods/mobile/icodsMobile/src/components/Input/index.tsx\";\n\n;\n\nvar Input = function Input(props) {\n  var divStyle = _styles.default.divStylePlain;\n\n  var _useState = (0, _react.useState)(true),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      eyeState = _useState2[0],\n      setEyeState = _useState2[1];\n\n  if (props.radius === 'top') {\n    divStyle = _styles.default.divStyleTopRadius;\n  } else if (props.radius === 'bottom') {\n    divStyle = _styles.default.divStyleBottomRadius;\n  }\n\n  return _react.default.createElement(_reactNative.View, {\n    style: divStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_reactNative.TextInput, {\n    autoCapitalize: \"none\",\n    secureTextEntry: props.isPassword && eyeState,\n    style: props.isPassword ? _styles.default.inputStylePassword : _styles.default.inputStyle,\n    placeholder: props.placeholder,\n    onChangeText: props.change,\n    defaultValue: props.value,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }), props.isPassword && _react.default.createElement(_reactNative.TouchableOpacity, {\n    style: _styles.default.eyes,\n    onPress: function onPress() {\n      return setEyeState(!eyeState);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, eyeState ? _react.default.createElement(_eye_open.default, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }) : _react.default.createElement(_eye_closed.default, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  })));\n};\n\nvar _default = Input;\nexports.default = _default;","map":{"version":3,"sources":["/Volumes/Wand/Workspace/ICods/ICods/mobile/icodsMobile/src/components/Input/index.tsx"],"names":["Input","props","divStyle","styles","divStylePlain","eyeState","setEyeState","radius","divStyleTopRadius","divStyleBottomRadius","isPassword","inputStylePassword","inputStyle","placeholder","change","value","eyes"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;AAQC;;AAED,IAAMA,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAkB;AAE9B,MAAIC,QAAQ,GAAGC,gBAAOC,aAAtB;;AAF8B,kBAGA,qBAAS,IAAT,CAHA;AAAA;AAAA,MAGzBC,QAHyB;AAAA,MAGfC,WAHe;;AAK9B,MAAIL,KAAK,CAACM,MAAN,KAAiB,KAArB,EAA4B;AAC1BL,IAAAA,QAAQ,GAAGC,gBAAOK,iBAAlB;AACD,GAFD,MAEO,IAAIP,KAAK,CAACM,MAAN,KAAiB,QAArB,EAA+B;AACpCL,IAAAA,QAAQ,GAAGC,gBAAOM,oBAAlB;AACD;;AAED,SACE,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAEP,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,sBAAD;AACI,IAAA,cAAc,EAAC,MADnB;AAEI,IAAA,eAAe,EAAED,KAAK,CAACS,UAAN,IAAoBL,QAFzC;AAGI,IAAA,KAAK,EAAEJ,KAAK,CAACS,UAAN,GAAmBP,gBAAOQ,kBAA1B,GAA+CR,gBAAOS,UAHjE;AAII,IAAA,WAAW,EAAEX,KAAK,CAACY,WAJvB;AAKI,IAAA,YAAY,EAAEZ,KAAK,CAACa,MALxB;AAMI,IAAA,YAAY,EAAEb,KAAK,CAACc,KANxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EASGd,KAAK,CAACS,UAAN,IACC,6BAAC,6BAAD;AAAkB,IAAA,KAAK,EAAEP,gBAAOa,IAAhC;AAAsC,IAAA,OAAO,EAAE;AAAA,aAAMV,WAAW,CAAC,CAACD,QAAF,CAAjB;AAAA,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEA,QAAQ,GACN,6BAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,GAEN,6BAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CAVJ,CADF;AAmBD,CA9BD;;eAgCeL,K","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport { TextInput, View, TextInputProps, TouchableOpacity } from 'react-native'\nimport EyeOpen from '../../assets/images/eye_open.svg'\nimport EyeClosed from '../../assets/images/eye_closed.svg'\nimport styles from './styles'\n\ninterface Props {\n  radius: 'top'|'bottom';\n  placeholder: string;\n  change: (event: string) => void;\n  value: string;\n  isPassword?: boolean;\n};\n\nconst Input = (props: Props) => {\n\n  let divStyle = styles.divStylePlain\n  let [eyeState, setEyeState] = useState(true)\n\n  if (props.radius === 'top') {\n    divStyle = styles.divStyleTopRadius\n  } else if (props.radius === 'bottom') {\n    divStyle = styles.divStyleBottomRadius\n  }\n\n  return (\n    <View style={divStyle} >\n      <TextInput\n          autoCapitalize='none'\n          secureTextEntry={props.isPassword && eyeState}\n          style={props.isPassword ? styles.inputStylePassword : styles.inputStyle}\n          placeholder={props.placeholder}\n          onChangeText={props.change}\n          defaultValue={props.value}\n      />\n      {props.isPassword && (\n        <TouchableOpacity style={styles.eyes} onPress={() => setEyeState(!eyeState)}> \n        { eyeState\n          ? <EyeOpen/>\n          : <EyeClosed/>\n        }\n        </TouchableOpacity>\n      )}\n    </View>)\n}\n\nexport default Input"]},"metadata":{},"sourceType":"script"}