{"ast":null,"code":"'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nfunction cloneReferencedElement(element, config) {\n  var cloneRef = config.ref;\n  var originalRef = element.ref;\n\n  for (var _len = arguments.length, children = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    children[_key - 2] = arguments[_key];\n  }\n\n  if (originalRef == null || cloneRef == null) {\n    return _react.default.cloneElement.apply(_react.default, [element, config].concat(children));\n  }\n\n  if (typeof originalRef !== 'function') {\n    if (__DEV__) {\n      console.warn('Cloning an element with a ref that will be overwritten because it ' + 'is not a function. Use a composable callback-style ref instead. ' + 'Ignoring ref: ' + originalRef);\n    }\n\n    return _react.default.cloneElement.apply(_react.default, [element, config].concat(children));\n  }\n\n  return _react.default.cloneElement.apply(_react.default, [element, _objectSpread({}, config, {\n    ref: function ref(component) {\n      cloneRef(component);\n      originalRef(component);\n    }\n  })].concat(children));\n}\n\nvar _default = cloneReferencedElement;\nexports.default = _default;","map":{"version":3,"sources":["/Volumes/Wand/Workspace/ICods/ICods/mobile/icodsMobile/node_modules/react-native-web/dist/vendor/react-native/ListView/cloneReferencedElement.js"],"names":["_objectSpread","target","i","arguments","length","source","ownKeys","Object","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","_defineProperty","obj","value","defineProperty","configurable","writable","__DEV__","process","env","NODE_ENV","cloneReferencedElement","element","config","cloneRef","ref","originalRef","_len","children","Array","_key","React","cloneElement","apply","console","warn","component"],"mappings":"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","sourcesContent":["'use strict';\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nfunction cloneReferencedElement(element, config) {\n  var cloneRef = config.ref;\n  var originalRef = element.ref;\n\n  for (var _len = arguments.length, children = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    children[_key - 2] = arguments[_key];\n  }\n\n  if (originalRef == null || cloneRef == null) {\n    return React.cloneElement.apply(React, [element, config].concat(children));\n  }\n\n  if (typeof originalRef !== 'function') {\n    if (__DEV__) {\n      console.warn('Cloning an element with a ref that will be overwritten because it ' + 'is not a function. Use a composable callback-style ref instead. ' + 'Ignoring ref: ' + originalRef);\n    }\n\n    return React.cloneElement.apply(React, [element, config].concat(children));\n  }\n\n  return React.cloneElement.apply(React, [element, _objectSpread({}, config, {\n    ref: function ref(component) {\n      cloneRef(component);\n      originalRef(component);\n    }\n  })].concat(children));\n}\n\nexport default cloneReferencedElement;"]},"metadata":{},"sourceType":"script"}