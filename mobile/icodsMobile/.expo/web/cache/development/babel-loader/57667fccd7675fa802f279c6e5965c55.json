{"ast":null,"code":"var _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useRegisterNavigator;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _nonSecure = require(\"nanoid/non-secure\");\n\nvar _EnsureSingleNavigator = require(\"./EnsureSingleNavigator\");\n\nfunction useRegisterNavigator() {\n  var _React$useState = React.useState(function () {\n    return (0, _nonSecure.nanoid)();\n  }),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 1),\n      key = _React$useState2[0];\n\n  var container = React.useContext(_EnsureSingleNavigator.SingleNavigatorContext);\n\n  if (container === undefined) {\n    throw new Error(\"Couldn't register the navigator. Have you wrapped your app with 'NavigationContainer'?\");\n  }\n\n  React.useEffect(function () {\n    var register = container.register,\n        unregister = container.unregister;\n    register(key);\n    return function () {\n      return unregister(key);\n    };\n  }, [container, key]);\n  return key;\n}","map":{"version":3,"sources":["useRegisterNavigator.tsx"],"names":["React","container","unregister","register"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AAMe,SAAA,oBAAA,GAAgC;AAAA,wBAC/BA,KAAK,CAALA,QAAAA,CAAe;AAAA,WAA7B,wBAA6B;AAAA,GAAfA,CAD+B;AAAA;AAAA,MACvC,GADuC;;AAE7C,MAAMC,SAAS,GAAGD,KAAK,CAALA,UAAAA,CAAlB,6CAAkBA,CAAlB;;AAEA,MAAIC,SAAS,KAAb,SAAA,EAA6B;AAC3B,UAAM,IAAA,KAAA,CAAN,wFAAM,CAAN;AAGD;;AAEDD,EAAAA,KAAK,CAALA,SAAAA,CAAgB,YAAM;AAAA,QACd,QADc,GACpB,SADoB,CACd,QADc;AAAA,QACFE,UADE,GACpB,SADoB,CACFA,UADE;AAGpBC,IAAAA,QAAQ,CAARA,GAAQ,CAARA;AAEA,WAAO;AAAA,aAAMD,UAAU,CAAvB,GAAuB,CAAhB;AAAA,KAAP;AALFF,GAAAA,EAMG,CAAA,SAAA,EANHA,GAMG,CANHA;AAQA,SAAA,GAAA;AACD","sourcesContent":["import * as React from 'react';\nimport { nanoid } from 'nanoid/non-secure';\nimport { SingleNavigatorContext } from './EnsureSingleNavigator';\n\n/**\n * Register a navigator in the parent context (either a navigation container or a screen).\n * This is used to prevent multiple navigators under a single container or screen.\n */\nexport default function useRegisterNavigator() {\n  const [key] = React.useState(() => nanoid());\n  const container = React.useContext(SingleNavigatorContext);\n\n  if (container === undefined) {\n    throw new Error(\n      \"Couldn't register the navigator. Have you wrapped your app with 'NavigationContainer'?\"\n    );\n  }\n\n  React.useEffect(() => {\n    const { register, unregister } = container;\n\n    register(key);\n\n    return () => unregister(key);\n  }, [container, key]);\n\n  return key;\n}\n"]},"metadata":{},"sourceType":"script"}