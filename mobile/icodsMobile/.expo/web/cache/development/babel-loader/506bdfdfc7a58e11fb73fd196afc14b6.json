{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useAuth = exports.AuthProvider = exports.AuthContext = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _api = _interopRequireDefault(require(\"../services/api\"));\n\nvar _asyncStorage = _interopRequireDefault(require(\"@react-native-community/async-storage\"));\n\nvar _this = this,\n    _jsxFileName = \"/Volumes/Wand/Workspace/ICods/ICods/mobile/icodsMobile/src/hooks/auth.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar AuthContext = (0, _react.createContext)({});\nexports.AuthContext = AuthContext;\n\nvar AuthProvider = function AuthProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = (0, _react.useState)({}),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(true),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      isLoading = _useState4[0],\n      setIsLoading = _useState4[1];\n\n  (0, _react.useEffect)(function () {\n    function loadStoredData() {\n      var _await$AsyncStorage$m, _await$AsyncStorage$m2, token, user;\n\n      return _regenerator.default.async(function loadStoredData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regenerator.default.awrap(_asyncStorage.default.multiGet(['@ICods:token', '@ICods:user']));\n\n            case 2:\n              _await$AsyncStorage$m = _context.sent;\n              _await$AsyncStorage$m2 = (0, _slicedToArray2.default)(_await$AsyncStorage$m, 2);\n              token = _await$AsyncStorage$m2[0];\n              user = _await$AsyncStorage$m2[1];\n\n              if (token[1] && user[1]) {\n                setData({\n                  token: token[1],\n                  user: JSON.parse(user[1])\n                });\n              }\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    setIsLoading(false);\n    loadStoredData();\n  }, []);\n  var signIn = (0, _react.useCallback)(function _callee(credentials) {\n    var email, password, res, _res$data, token, _user;\n\n    return _regenerator.default.async(function _callee$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            email = credentials.email, password = credentials.password;\n            console.log(email, password);\n            _context2.next = 5;\n            return _regenerator.default.awrap(_api.default.post('signin', {\n              email: email,\n              password: password\n            }));\n\n          case 5:\n            res = _context2.sent;\n            _res$data = res.data, token = _res$data.token, _user = _res$data.user;\n            _context2.next = 9;\n            return _regenerator.default.awrap(_asyncStorage.default.multiSet([['@ICods:token', token], ['@ICods:user', JSON.stringify(_user)]]));\n\n          case 9:\n            _api.default.defaults.headers.authorization = \"Bearer \" + token;\n            setData({\n              token: token,\n              user: _user\n            });\n            _context2.next = 17;\n            break;\n\n          case 13:\n            _context2.prev = 13;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(\"err.message\");\n            throw new Error('User is not Authenticated');\n\n          case 17:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 13]], Promise);\n  }, []);\n  var signOut = (0, _react.useCallback)(function _callee2() {\n    return _regenerator.default.async(function _callee2$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regenerator.default.awrap(_asyncStorage.default.multiRemove(['@ICods:token', '@ICods:user']));\n\n          case 2:\n            setData({});\n\n          case 3:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, []);\n  var updateUser = (0, _react.useCallback)(function (updatedUser) {\n    _asyncStorage.default.setItem('@ICods:user', JSON.stringify(updatedUser));\n\n    setData({\n      token: data.token,\n      user: _objectSpread({}, updatedUser)\n    });\n  }, [data]);\n  return _react.default.createElement(AuthContext.Provider, {\n    value: {\n      user: data.user,\n      signIn: signIn,\n      token: data.token,\n      signOut: signOut,\n      isLoading: isLoading,\n      updateUser: updateUser\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nexports.AuthProvider = AuthProvider;\n\nvar useAuth = function useAuth() {\n  var context = (0, _react.useContext)(AuthContext);\n\n  if (!context) {\n    throw new Error('useAuth must be wrapped inside an AuthProvider');\n  }\n\n  return context;\n};\n\nexports.useAuth = useAuth;","map":{"version":3,"sources":["/Volumes/Wand/Workspace/ICods/ICods/mobile/icodsMobile/src/hooks/auth.tsx"],"names":["AuthContext","AuthProvider","children","data","setData","isLoading","setIsLoading","loadStoredData","AsyncStorage","multiGet","token","user","JSON","parse","signIn","credentials","email","password","console","log","api","post","res","multiSet","stringify","defaults","headers","authorization","Error","signOut","multiRemove","updateUser","updatedUser","setItem","useAuth","context"],"mappings":"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","sourcesContent":["import React, { createContext, useCallback, useState, useContext, useEffect } from 'react';\nimport api from '../services/api'\nimport AsyncStorage from '@react-native-community/async-storage'\n\ninterface User {\n  name: string;\n  email: string;\n  id: string;\n}\n\ninterface AuthState {\n  user: User;\n  token: string;\n}\n\ninterface SignInCredentials {\n  email: string;\n  password: string;\n}\n\ninterface AuthContextData {\n  user: User;\n  token: string;\n  isLoading: boolean;\n  signIn: (credentials : SignInCredentials) => Promise<void>;\n  signOut: () => Promise<void>;\n  updateUser(user: User): void;\n}\n\nconst AuthContext = createContext<AuthContextData>({} as AuthContextData);\n\nconst AuthProvider: React.FC = ({ children }) => {\n  const [data, setData] = useState<AuthState>({} as AuthState)\n  const [isLoading, setIsLoading] = useState<boolean>(true)\n\n  useEffect(() => {\n    async function loadStoredData(): Promise<void> {\n      const [token, user] = await AsyncStorage.multiGet(['@ICods:token', '@ICods:user'])\n\n      if (token[1] && user[1]) {\n        setData({ token: token[1], user: JSON.parse(user[1])})\n      }\n    }\n    \n    setIsLoading(false)\n    loadStoredData()\n  }, [])\n\n  const signIn = useCallback(async (credentials: SignInCredentials ) => {\n    try {\n      const { email, password } = credentials;\n      console.log(email, password)\n      const res = await api.post('signin', {\n        email,\n        password\n      })\n      \n      const { token, user } = res.data\n        \n      await AsyncStorage.multiSet([\n        ['@ICods:token', token],\n        ['@ICods:user', JSON.stringify(user)]\n      ])\n\n      api.defaults.headers.authorization = `Bearer ${token}`\n\n      setData({token, user})\n    } catch (err) {\n      console.log(\"err.message\")\n      throw new Error('User is not Authenticated')\n    }\n  }, [])\n\n  const signOut = useCallback(async () => {\n    await AsyncStorage.multiRemove(['@ICods:token', '@ICods:user'])  \n\n    setData({} as AuthState)\n  }, [])\n\n  const updateUser = useCallback((updatedUser: User) => {\n\n    AsyncStorage.setItem('@ICods:user', JSON.stringify(updatedUser));\n\n    setData({\n      token: data.token,\n      user: {\n        ...updatedUser\n      } \n    })\n  }, [data])\n\n  return (  \n    <AuthContext.Provider value={{ \n      user: data.user, \n      signIn, \n      token: data.token, \n      signOut,\n      isLoading,\n      updateUser\n    }}>\n      { children } \n    </AuthContext.Provider>\n  );\n};  \n\nconst useAuth = () => {\n  const context = useContext(AuthContext)\n\n  if (!context) {\n    throw new Error('useAuth must be wrapped inside an AuthProvider')\n  }\n\n  return context;\n}\n \n\nexport { AuthContext, AuthProvider, useAuth }"]},"metadata":{},"sourceType":"script"}