{"ast":null,"code":"'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _AnimatedValue = _interopRequireDefault(require(\"../nodes/AnimatedValue\"));\n\nvar _AnimatedValueXY = _interopRequireDefault(require(\"../nodes/AnimatedValueXY\"));\n\nvar _Animation2 = _interopRequireDefault(require(\"./Animation\"));\n\nvar _SpringConfig = _interopRequireDefault(require(\"../SpringConfig\"));\n\nvar _invariant = _interopRequireDefault(require(\"fbjs/lib/invariant\"));\n\nvar _NativeAnimatedHelper = require(\"../NativeAnimatedHelper\");\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction withDefault(value, defaultValue) {\n  if (value === undefined || value === null) {\n    return defaultValue;\n  }\n\n  return value;\n}\n\nvar SpringAnimation = function (_Animation) {\n  _inheritsLoose(SpringAnimation, _Animation);\n\n  function SpringAnimation(config) {\n    var _this;\n\n    _this = _Animation.call(this) || this;\n    _this._overshootClamping = withDefault(config.overshootClamping, false);\n    _this._restDisplacementThreshold = withDefault(config.restDisplacementThreshold, 0.001);\n    _this._restSpeedThreshold = withDefault(config.restSpeedThreshold, 0.001);\n    _this._initialVelocity = withDefault(config.velocity, 0);\n    _this._lastVelocity = withDefault(config.velocity, 0);\n    _this._toValue = config.toValue;\n    _this._delay = withDefault(config.delay, 0);\n    _this._useNativeDriver = (0, _NativeAnimatedHelper.shouldUseNativeDriver)(config);\n    _this.__isInteraction = config.isInteraction !== undefined ? config.isInteraction : true;\n    _this.__iterations = config.iterations !== undefined ? config.iterations : 1;\n\n    if (config.stiffness !== undefined || config.damping !== undefined || config.mass !== undefined) {\n      (0, _invariant.default)(config.bounciness === undefined && config.speed === undefined && config.tension === undefined && config.friction === undefined, 'You can define one of bounciness/speed, tension/friction, or stiffness/damping/mass, but not more than one');\n      _this._stiffness = withDefault(config.stiffness, 100);\n      _this._damping = withDefault(config.damping, 10);\n      _this._mass = withDefault(config.mass, 1);\n    } else if (config.bounciness !== undefined || config.speed !== undefined) {\n      (0, _invariant.default)(config.tension === undefined && config.friction === undefined && config.stiffness === undefined && config.damping === undefined && config.mass === undefined, 'You can define one of bounciness/speed, tension/friction, or stiffness/damping/mass, but not more than one');\n\n      var springConfig = _SpringConfig.default.fromBouncinessAndSpeed(withDefault(config.bounciness, 8), withDefault(config.speed, 12));\n\n      _this._stiffness = springConfig.stiffness;\n      _this._damping = springConfig.damping;\n      _this._mass = 1;\n    } else {\n      var _springConfig = _SpringConfig.default.fromOrigamiTensionAndFriction(withDefault(config.tension, 40), withDefault(config.friction, 7));\n\n      _this._stiffness = _springConfig.stiffness;\n      _this._damping = _springConfig.damping;\n      _this._mass = 1;\n    }\n\n    (0, _invariant.default)(_this._stiffness > 0, 'Stiffness value must be greater than 0');\n    (0, _invariant.default)(_this._damping > 0, 'Damping value must be greater than 0');\n    (0, _invariant.default)(_this._mass > 0, 'Mass value must be greater than 0');\n    return _this;\n  }\n\n  var _proto = SpringAnimation.prototype;\n\n  _proto.__getNativeAnimationConfig = function __getNativeAnimationConfig() {\n    return {\n      type: 'spring',\n      overshootClamping: this._overshootClamping,\n      restDisplacementThreshold: this._restDisplacementThreshold,\n      restSpeedThreshold: this._restSpeedThreshold,\n      stiffness: this._stiffness,\n      damping: this._damping,\n      mass: this._mass,\n      initialVelocity: withDefault(this._initialVelocity, this._lastVelocity),\n      toValue: this._toValue,\n      iterations: this.__iterations\n    };\n  };\n\n  _proto.start = function start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {\n    var _this2 = this;\n\n    this.__active = true;\n    this._startPosition = fromValue;\n    this._lastPosition = this._startPosition;\n    this._onUpdate = onUpdate;\n    this.__onEnd = onEnd;\n    this._lastTime = Date.now();\n    this._frameTime = 0.0;\n\n    if (previousAnimation instanceof SpringAnimation) {\n      var internalState = previousAnimation.getInternalState();\n      this._lastPosition = internalState.lastPosition;\n      this._lastVelocity = internalState.lastVelocity;\n      this._initialVelocity = this._lastVelocity;\n      this._lastTime = internalState.lastTime;\n    }\n\n    var start = function start() {\n      if (_this2._useNativeDriver) {\n        _this2.__startNativeAnimation(animatedValue);\n      } else {\n        _this2.onUpdate();\n      }\n    };\n\n    if (this._delay) {\n      this._timeout = setTimeout(start, this._delay);\n    } else {\n      start();\n    }\n  };\n\n  _proto.getInternalState = function getInternalState() {\n    return {\n      lastPosition: this._lastPosition,\n      lastVelocity: this._lastVelocity,\n      lastTime: this._lastTime\n    };\n  };\n\n  _proto.onUpdate = function onUpdate() {\n    var MAX_STEPS = 64;\n    var now = Date.now();\n\n    if (now > this._lastTime + MAX_STEPS) {\n      now = this._lastTime + MAX_STEPS;\n    }\n\n    var deltaTime = (now - this._lastTime) / 1000;\n    this._frameTime += deltaTime;\n    var c = this._damping;\n    var m = this._mass;\n    var k = this._stiffness;\n    var v0 = -this._initialVelocity;\n    var zeta = c / (2 * Math.sqrt(k * m));\n    var omega0 = Math.sqrt(k / m);\n    var omega1 = omega0 * Math.sqrt(1.0 - zeta * zeta);\n    var x0 = this._toValue - this._startPosition;\n    var position = 0.0;\n    var velocity = 0.0;\n    var t = this._frameTime;\n\n    if (zeta < 1) {\n      var envelope = Math.exp(-zeta * omega0 * t);\n      position = this._toValue - envelope * ((v0 + zeta * omega0 * x0) / omega1 * Math.sin(omega1 * t) + x0 * Math.cos(omega1 * t));\n      velocity = zeta * omega0 * envelope * (Math.sin(omega1 * t) * (v0 + zeta * omega0 * x0) / omega1 + x0 * Math.cos(omega1 * t)) - envelope * (Math.cos(omega1 * t) * (v0 + zeta * omega0 * x0) - omega1 * x0 * Math.sin(omega1 * t));\n    } else {\n      var _envelope = Math.exp(-omega0 * t);\n\n      position = this._toValue - _envelope * (x0 + (v0 + omega0 * x0) * t);\n      velocity = _envelope * (v0 * (t * omega0 - 1) + t * x0 * (omega0 * omega0));\n    }\n\n    this._lastTime = now;\n    this._lastPosition = position;\n    this._lastVelocity = velocity;\n\n    this._onUpdate(position);\n\n    if (!this.__active) {\n      return;\n    }\n\n    var isOvershooting = false;\n\n    if (this._overshootClamping && this._stiffness !== 0) {\n      if (this._startPosition < this._toValue) {\n        isOvershooting = position > this._toValue;\n      } else {\n        isOvershooting = position < this._toValue;\n      }\n    }\n\n    var isVelocity = Math.abs(velocity) <= this._restSpeedThreshold;\n\n    var isDisplacement = true;\n\n    if (this._stiffness !== 0) {\n      isDisplacement = Math.abs(this._toValue - position) <= this._restDisplacementThreshold;\n    }\n\n    if (isOvershooting || isVelocity && isDisplacement) {\n      if (this._stiffness !== 0) {\n        this._lastPosition = this._toValue;\n        this._lastVelocity = 0;\n\n        this._onUpdate(this._toValue);\n      }\n\n      this.__debouncedOnEnd({\n        finished: true\n      });\n\n      return;\n    }\n\n    this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));\n  };\n\n  _proto.stop = function stop() {\n    _Animation.prototype.stop.call(this);\n\n    this.__active = false;\n    clearTimeout(this._timeout);\n    global.cancelAnimationFrame(this._animationFrame);\n\n    this.__debouncedOnEnd({\n      finished: false\n    });\n  };\n\n  return SpringAnimation;\n}(_Animation2.default);\n\nvar _default = SpringAnimation;\nexports.default = _default;","map":{"version":3,"sources":["/Volumes/Wand/Workspace/ICods/ICods/mobile/icodsMobile/node_modules/react-native-web/dist/vendor/react-native/Animated/animations/SpringAnimation.js"],"names":["_inheritsLoose","subClass","superClass","prototype","Object","create","constructor","__proto__","withDefault","value","defaultValue","undefined","SpringAnimation","_Animation","config","_this","call","_overshootClamping","overshootClamping","_restDisplacementThreshold","restDisplacementThreshold","_restSpeedThreshold","restSpeedThreshold","_initialVelocity","velocity","_lastVelocity","_toValue","toValue","_delay","delay","_useNativeDriver","__isInteraction","isInteraction","__iterations","iterations","stiffness","damping","mass","bounciness","speed","tension","friction","_stiffness","_damping","_mass","springConfig","SpringConfig","fromBouncinessAndSpeed","_springConfig","fromOrigamiTensionAndFriction","_proto","__getNativeAnimationConfig","type","initialVelocity","start","fromValue","onUpdate","onEnd","previousAnimation","animatedValue","_this2","__active","_startPosition","_lastPosition","_onUpdate","__onEnd","_lastTime","Date","now","_frameTime","internalState","getInternalState","lastPosition","lastVelocity","lastTime","__startNativeAnimation","_timeout","setTimeout","MAX_STEPS","deltaTime","c","m","k","v0","zeta","Math","sqrt","omega0","omega1","x0","position","t","envelope","exp","sin","cos","_envelope","isOvershooting","isVelocity","abs","isDisplacement","__debouncedOnEnd","finished","_animationFrame","requestAnimationFrame","bind","stop","clearTimeout","global","cancelAnimationFrame","Animation"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nimport AnimatedValue from '../nodes/AnimatedValue';\nimport AnimatedValueXY from '../nodes/AnimatedValueXY';\nimport Animation from './Animation';\nimport SpringConfig from '../SpringConfig';\nimport invariant from 'fbjs/lib/invariant';\nimport { shouldUseNativeDriver } from '../NativeAnimatedHelper';\n\nfunction withDefault(value, defaultValue) {\n  if (value === undefined || value === null) {\n    return defaultValue;\n  }\n\n  return value;\n}\n\nvar SpringAnimation =\n/*#__PURE__*/\nfunction (_Animation) {\n  _inheritsLoose(SpringAnimation, _Animation);\n\n  function SpringAnimation(config) {\n    var _this;\n\n    _this = _Animation.call(this) || this;\n    _this._overshootClamping = withDefault(config.overshootClamping, false);\n    _this._restDisplacementThreshold = withDefault(config.restDisplacementThreshold, 0.001);\n    _this._restSpeedThreshold = withDefault(config.restSpeedThreshold, 0.001);\n    _this._initialVelocity = withDefault(config.velocity, 0);\n    _this._lastVelocity = withDefault(config.velocity, 0);\n    _this._toValue = config.toValue;\n    _this._delay = withDefault(config.delay, 0);\n    _this._useNativeDriver = shouldUseNativeDriver(config);\n    _this.__isInteraction = config.isInteraction !== undefined ? config.isInteraction : true;\n    _this.__iterations = config.iterations !== undefined ? config.iterations : 1;\n\n    if (config.stiffness !== undefined || config.damping !== undefined || config.mass !== undefined) {\n      invariant(config.bounciness === undefined && config.speed === undefined && config.tension === undefined && config.friction === undefined, 'You can define one of bounciness/speed, tension/friction, or stiffness/damping/mass, but not more than one');\n      _this._stiffness = withDefault(config.stiffness, 100);\n      _this._damping = withDefault(config.damping, 10);\n      _this._mass = withDefault(config.mass, 1);\n    } else if (config.bounciness !== undefined || config.speed !== undefined) {\n      // Convert the origami bounciness/speed values to stiffness/damping\n      // We assume mass is 1.\n      invariant(config.tension === undefined && config.friction === undefined && config.stiffness === undefined && config.damping === undefined && config.mass === undefined, 'You can define one of bounciness/speed, tension/friction, or stiffness/damping/mass, but not more than one');\n      var springConfig = SpringConfig.fromBouncinessAndSpeed(withDefault(config.bounciness, 8), withDefault(config.speed, 12));\n      _this._stiffness = springConfig.stiffness;\n      _this._damping = springConfig.damping;\n      _this._mass = 1;\n    } else {\n      // Convert the origami tension/friction values to stiffness/damping\n      // We assume mass is 1.\n      var _springConfig = SpringConfig.fromOrigamiTensionAndFriction(withDefault(config.tension, 40), withDefault(config.friction, 7));\n\n      _this._stiffness = _springConfig.stiffness;\n      _this._damping = _springConfig.damping;\n      _this._mass = 1;\n    }\n\n    invariant(_this._stiffness > 0, 'Stiffness value must be greater than 0');\n    invariant(_this._damping > 0, 'Damping value must be greater than 0');\n    invariant(_this._mass > 0, 'Mass value must be greater than 0');\n    return _this;\n  }\n\n  var _proto = SpringAnimation.prototype;\n\n  _proto.__getNativeAnimationConfig = function __getNativeAnimationConfig() {\n    return {\n      type: 'spring',\n      overshootClamping: this._overshootClamping,\n      restDisplacementThreshold: this._restDisplacementThreshold,\n      restSpeedThreshold: this._restSpeedThreshold,\n      stiffness: this._stiffness,\n      damping: this._damping,\n      mass: this._mass,\n      initialVelocity: withDefault(this._initialVelocity, this._lastVelocity),\n      toValue: this._toValue,\n      iterations: this.__iterations\n    };\n  };\n\n  _proto.start = function start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {\n    var _this2 = this;\n\n    this.__active = true;\n    this._startPosition = fromValue;\n    this._lastPosition = this._startPosition;\n    this._onUpdate = onUpdate;\n    this.__onEnd = onEnd;\n    this._lastTime = Date.now();\n    this._frameTime = 0.0;\n\n    if (previousAnimation instanceof SpringAnimation) {\n      var internalState = previousAnimation.getInternalState();\n      this._lastPosition = internalState.lastPosition;\n      this._lastVelocity = internalState.lastVelocity; // Set the initial velocity to the last velocity\n\n      this._initialVelocity = this._lastVelocity;\n      this._lastTime = internalState.lastTime;\n    }\n\n    var start = function start() {\n      if (_this2._useNativeDriver) {\n        _this2.__startNativeAnimation(animatedValue);\n      } else {\n        _this2.onUpdate();\n      }\n    }; //  If this._delay is more than 0, we start after the timeout.\n\n\n    if (this._delay) {\n      this._timeout = setTimeout(start, this._delay);\n    } else {\n      start();\n    }\n  };\n\n  _proto.getInternalState = function getInternalState() {\n    return {\n      lastPosition: this._lastPosition,\n      lastVelocity: this._lastVelocity,\n      lastTime: this._lastTime\n    };\n  }\n  /**\n   * This spring model is based off of a damped harmonic oscillator\n   * (https://en.wikipedia.org/wiki/Harmonic_oscillator#Damped_harmonic_oscillator).\n   *\n   * We use the closed form of the second order differential equation:\n   *\n   * x'' + (2ζ⍵_0)x' + ⍵^2x = 0\n   *\n   * where\n   *    ⍵_0 = √(k / m) (undamped angular frequency of the oscillator),\n   *    ζ = c / 2√mk (damping ratio),\n   *    c = damping constant\n   *    k = stiffness\n   *    m = mass\n   *\n   * The derivation of the closed form is described in detail here:\n   * http://planetmath.org/sites/default/files/texpdf/39745.pdf\n   *\n   * This algorithm happens to match the algorithm used by CASpringAnimation,\n   * a QuartzCore (iOS) API that creates spring animations.\n   */\n  ;\n\n  _proto.onUpdate = function onUpdate() {\n    // If for some reason we lost a lot of frames (e.g. process large payload or\n    // stopped in the debugger), we only advance by 4 frames worth of\n    // computation and will continue on the next frame. It's better to have it\n    // running at faster speed than jumping to the end.\n    var MAX_STEPS = 64;\n    var now = Date.now();\n\n    if (now > this._lastTime + MAX_STEPS) {\n      now = this._lastTime + MAX_STEPS;\n    }\n\n    var deltaTime = (now - this._lastTime) / 1000;\n    this._frameTime += deltaTime;\n    var c = this._damping;\n    var m = this._mass;\n    var k = this._stiffness;\n    var v0 = -this._initialVelocity;\n    var zeta = c / (2 * Math.sqrt(k * m)); // damping ratio\n\n    var omega0 = Math.sqrt(k / m); // undamped angular frequency of the oscillator (rad/ms)\n\n    var omega1 = omega0 * Math.sqrt(1.0 - zeta * zeta); // exponential decay\n\n    var x0 = this._toValue - this._startPosition; // calculate the oscillation from x0 = 1 to x = 0\n\n    var position = 0.0;\n    var velocity = 0.0;\n    var t = this._frameTime;\n\n    if (zeta < 1) {\n      // Under damped\n      var envelope = Math.exp(-zeta * omega0 * t);\n      position = this._toValue - envelope * ((v0 + zeta * omega0 * x0) / omega1 * Math.sin(omega1 * t) + x0 * Math.cos(omega1 * t)); // This looks crazy -- it's actually just the derivative of the\n      // oscillation function\n\n      velocity = zeta * omega0 * envelope * (Math.sin(omega1 * t) * (v0 + zeta * omega0 * x0) / omega1 + x0 * Math.cos(omega1 * t)) - envelope * (Math.cos(omega1 * t) * (v0 + zeta * omega0 * x0) - omega1 * x0 * Math.sin(omega1 * t));\n    } else {\n      // Critically damped\n      var _envelope = Math.exp(-omega0 * t);\n\n      position = this._toValue - _envelope * (x0 + (v0 + omega0 * x0) * t);\n      velocity = _envelope * (v0 * (t * omega0 - 1) + t * x0 * (omega0 * omega0));\n    }\n\n    this._lastTime = now;\n    this._lastPosition = position;\n    this._lastVelocity = velocity;\n\n    this._onUpdate(position);\n\n    if (!this.__active) {\n      // a listener might have stopped us in _onUpdate\n      return;\n    } // Conditions for stopping the spring animation\n\n\n    var isOvershooting = false;\n\n    if (this._overshootClamping && this._stiffness !== 0) {\n      if (this._startPosition < this._toValue) {\n        isOvershooting = position > this._toValue;\n      } else {\n        isOvershooting = position < this._toValue;\n      }\n    }\n\n    var isVelocity = Math.abs(velocity) <= this._restSpeedThreshold;\n\n    var isDisplacement = true;\n\n    if (this._stiffness !== 0) {\n      isDisplacement = Math.abs(this._toValue - position) <= this._restDisplacementThreshold;\n    }\n\n    if (isOvershooting || isVelocity && isDisplacement) {\n      if (this._stiffness !== 0) {\n        // Ensure that we end up with a round value\n        this._lastPosition = this._toValue;\n        this._lastVelocity = 0;\n\n        this._onUpdate(this._toValue);\n      }\n\n      this.__debouncedOnEnd({\n        finished: true\n      });\n\n      return;\n    }\n\n    this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));\n  };\n\n  _proto.stop = function stop() {\n    _Animation.prototype.stop.call(this);\n\n    this.__active = false;\n    clearTimeout(this._timeout);\n    global.cancelAnimationFrame(this._animationFrame);\n\n    this.__debouncedOnEnd({\n      finished: false\n    });\n  };\n\n  return SpringAnimation;\n}(Animation);\n\nexport default SpringAnimation;"]},"metadata":{},"sourceType":"script"}